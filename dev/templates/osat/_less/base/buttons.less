/* Buttons */
.btn() {
	box-sizing:			border-box;
	display:			inline-block;
	padding:			@gutter;
	min-width:			@max_width/6;

	max-width:			100%;
	min-height:			20px;
	text-align:			center;
	border:				none;

	background-color:	@color_primary;
	color:				@color_white;
	text-decoration:	none;
	font-weight:		bold;

	@media all and (max-width: 480px) {
		min-width:		0;
	}

	.no-touchevents & {
		&:hover {
			background-color: @color_extra1;
		}
	}

	.csstransitions & {
		.transition(~"background-color,color");
	}
}

*[class^="btn-"], *[class*=" btn-"], *[class^="btn"], *[class*=" btn"] {
	.btn();

	&:active { /* pressed */
		background-color:	@color_extra3 !important;
		color:				@color_white !important;
	}
	&:focus {
		background-color:	@color_extra3 !important;
		color:				@color_white !important;
	}
	&.inactive,
	&.disabled {
		background-color:	@color_bg_shade !important;
		color:				@color_bg_shade_d !important;
	}

	&.btn-text,
	&.btn-added {
		background-color:	transparent !important;
		color:				@color_text !important;
		text-decoration:	underline;
		padding-left:		round(@gutter/2);
		padding-right:		round(@gutter/2);
		min-width:			0;
		&.disabled {
			background-color:	transparent !important;
			color:				@color_bg_shade !important;
		}
		&:focus {
			text-decoration:	none;
		}
	}

	&.block {
		display:		block;
		width:			100%;
		min-width:		0;
	}

	/* Checked / Unchecked types */
	>.text {
		display:	inline;
	}
	>.text.checked {
		display:	none;
	}
	&.checked {
		>.text {
			display:	none;
		}
		>.text.checked {
			display:	inline;
		}
	}
}

.forward(@size: xl) {
	@s: 32px;
    .font(strong, @size);
    width: 100%;
    text-align: left;
    padding: @gutter_width;
    padding-left: (@gutter_width * 3) + @s;
    position: relative;
    &:before {
        content: "";
        display: block;
        width: @s;
        height: @s;
        background: transparent no-repeat center;
        background-size: contain;
        .svg-uri(~"icons/eufa_icon_dropdown", @color_white);
        .rotate(-90deg);

        position: absolute;
        top: 50%; margin-top: round(@s/-2);
        left: @gutter_width * 1;
    }
}


.previous(@size: xl) {
	.forward(@size);
    &:before {
        .rotate(90deg);
    }
}
